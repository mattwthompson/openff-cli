name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: [3.6, 3.7]
        openeye: ["true", "false"]
    env:
      PYVER: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

    - uses: goanpeca/setup-miniconda@v1
      name: Install both RDKit and OpenEye toolkits
      if: ${{ matrix.openeye == 'TRUE' }}
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: test
        channel-priority: true
        environment-file: devtools/conda-envs/test_env.yaml
        auto-activate-base: false

    - uses: goanpeca/setup-miniconda@v1
      name: Install only RDKit
      if: ${{ matrix.openeye == 'FALSE' }}
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: test
        channel-priority: true
        environment-file: devtools/conda-envs/rdkit_env.yaml
        auto-activate-base: false

    - name: Check installed toolkits
      shell: bash -l {0}
      run: |
        if [[ "$OPENEYE" == true ]]; then
          python -c "from openforcefield.utils.toolkits import OPENEYE_AVAILABLE; assert OPENEYE_AVAILABLE, 'OpenEye unavailable'"
        fi
        if [[ "$OPENEYE" == false ]]; then
          if [[ $(conda list | grep openeye-toolkits) ]]; then
            conda remove --force openeye-toolkits --yes
          fi
          python -c "from openforcefield.utils.toolkits import OPENEYE_AVAILABLE; assert not OPENEYE_AVAILABLE, 'OpenEye unexpectedly found'"
        fi

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    - name: Environment Information
      shell: bash -l {0}
      run: |
        conda info --all
        conda list

    - name: Install package
      shell: bash -l {0}
      run: |
        python -m pip install --no-deps .

    - name: Run tests
      shell: bash -l {0}
      run: |
        PYTEST_ARGS=" -v --cov=openff/cli/ --cov-report=xml --cov-config=setup.cfg"
        pytest $PYTEST_ARGS openff/cli/tests

    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
